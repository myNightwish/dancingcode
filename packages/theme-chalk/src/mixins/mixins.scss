// 表示导入当前目录下的名为 "function" 的样式文件。在 Sass 中，默认会自动查找并导入同名的 .scss 或 .sass 文件
// 如果文件路径未指定文件扩展名，则 Sass 会按照一定的规则搜索符合条件的文件。
@import 'function';
@import '../common/var';
/* BEM
 -------------------------- */
@mixin b($block) {
    // 这里是声明定义的意思，比如backtop传入实际变成了：=>$B:mi-backtop !global;
    $B: $namespace + '-' + $block !global;

    .#{$B} {
        @content;
    }
}
@mixin e($element) {
    // $B: $B: $namespace + '-' + $block !global; =====> "mi-skeleton"; 
    // $element-separator: "__"; config定义的
    $E: $element !global;
    $selector: &;
    $currentSelector: "";
    // 循环过程在拼接，得到：".mi-skeleton__item, .mi-skeleton__title, .mi-skeleton__variant"等
    @each $unit in $element {
      $currentSelector: #{$currentSelector + "." + $B + $element-separator + $unit + ","};
    }
    // function.scss中定义了
    // todo：暂时不懂为啥这里要分开处理，先放着
    @if hitAllSpecialNestRule($selector) {
      @at-root {
        #{$selector} {
          #{$currentSelector} {
            @content;
          }
        }
      }
    } @else {
      @at-root {
        #{$currentSelector} {
          @content;
        }
      }
    }
}
@mixin m($modifier) {
    $selector: &;
    $currentSelector: '';
    @each $unit in $modifier {
        $currentSelector: #{$currentSelector +
            & +
            $modifier-separator +
            $unit +
            ','};
    }

    @at-root {
        #{$currentSelector} {
            @content;
        }
    }
}

@mixin when($state) {
    @at-root {
        &.#{$state-prefix + $state} {
            @content;
        }
    }
}

/* Break-points
 ----------接受两个参数 $key(响应尺寸) 和 $map （断点Map）---------------- */
 @mixin res($key, $map: $--breakpoints) {
  // 循环断点Map，如果存在则返回
  // 使用函数 map-has-key($map,$key) 查：根据 $key 参数，返回 $key 在 $map 中对应的 value 值
  @if map-has-key($map, $key) {
    // 使用函数 map-get($map,$key)拿： 返回 $key 在 $map 中对应的 value 值
    // 使用函数 inspect($value) 将其转成字符串，使用插值 #{}、@content 生成 媒体查询
    @media only screen and #{inspect(map-get($map, $key))} {
      @content;
    }
  } @else {
    // 如果 $key 不存在 $map中，将返回 null 值（此时生成警告断点未定义 Undefeined points ）
    @warn "Undefeined points: `#{$map}`";
  }
}
// 最终生成：
/* 超小屏幕（手机，小于 768px） */
// @media only screen and (max-width: 767px) { ... } 
// /* 小屏幕（平板，大于等于 768px） */
// @media only screen and (min-width: 768px) { ... }
// /* 中等屏幕（桌面显示器，大于等于 992px） */
// @media only screen and (min-width: 992px) { ... }
// /* 大屏幕（大桌面显示器，大于等于 1200px） */
// @media only screen and (min-width: 1200px) { ... }
// /* 超大屏幕（大桌面显示器，大于等于 1920px） */
// @media only screen and (min-width: 1920px) { ... }
